------------------------------------------------------------------------------------------------------

Consider a Si n‐channel JFET with 1018 cm‐3 p+‐doping, 1016 cm‐3 n‐doping, a device
half‐width of 1 m, a device depth of 1000 µm, and a device length of 100 µm. The source
voltage is 0 V, the drain voltage is 5 V, and the contact potential is negligible. If the
gate voltage is 0 V, –3 V, and –6 V, what are the three resulting values of the drain current?
For Si, the intrinsic charge carrier density is ni = 1.5×1010 cm‐3, the dielectric constant is
εr = 11.8, and the electron and hole mobilities are μn = 1350 cm2/(V∙s) and μp = 480 cm2/(V∙s).

------------------------------------------------------------------------------------------------------

# Na > Nd corresponding to a p+‐n n‐channel JFET
# The pinch off voltage is Vp = 7.67V
# The contact potential is negligible, V0 = 0, so at pinch off Vd = Vp + Vg

#importing packages
from __future__ import division, print_function
from math import exp, sqrt, log
import numpy as np
import math 
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

#initialzing variables 
c = 299792458 #m/s
epsilon_0 = 8.8541878e-12 #F/m
h = 6.62607e-34 #Js
hbar = 6.62607e-34/2/math.pi #Js
q = 1.602e-19 #C
k_B = 1.38064852e-23 #J/K
T = 300 #K
E_g = 1.11*q #eV
epsilon_r = 11.8
mu_n = 1350e-4 # cm^2/(V.s) 
n_i = 1.5e10*1e6 #cm^-3
N_a = 1.0e18*1e6 #cm^-3
N_d = 1.0e16*1e6 #cm^-3
a = 1e-6 #m
Z = 1000e-6 #m
L = 100e-6 #m

#solving for needed variables
n = N_d
V_P = q*a**2*N_d/2/epsilon_r/epsilon_0
rho = 1/(n*q*mu_n)
G_0 = 2*a*Z/L/rho
V_D = 5

I_Dsat = (G_0*V_P*(((0/V_P)+(2/3*(((0/V_P))**1.5))+1/3)))*1000
V_Dsat = 0+V_P

I_Dsat1 = (G_0*V_P*(((-3/V_P)+(2/3*(((3/V_P))**1.5))+1/3)))*1000
V_Dsat1 = -3+V_P

I_Dsat2 = (G_0*V_P*(((-6/V_P)+(2/3*(((6/V_P))**1.5))+1/3)))*1000
V_Dsat2 = -6+V_P

#plotting the JFET curves for different gate voltages 
plt.xlim([0,10])
plt.ylim([0,14])

xdata = [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, V_Dsat, 8, 9, 10]
ydata = [0.0, 2.1, 4.2, 6.7, 8.3, 10.1, 10.8, I_Dsat, I_Dsat, I_Dsat, I_Dsat]

xdata = np.asarray(xdata)
ydata = np.asarray(ydata)
plt.plot(xdata, ydata, color = 'r', label = 'E_G = 0')

x1data = [0.0, 1.0, 2.0, 3.0, 4.0, V_Dsat1, 6, 7, 8, 9, 10]
y1data = [0.0, 2.2, 3.4, I_Dsat1, I_Dsat1, I_Dsat1,I_Dsat1,I_Dsat1,I_Dsat1,I_Dsat1,I_Dsat1]

x1data = np.asarray(x1data)
y1data = np.asarray(y1data)
plt.plot(x1data, y1data, color = 'b', label = 'E_G = -3')

x2data = [0.0, 1.0, V_Dsat2, 3, 4, 5, 6, 7, 8, 9, 10]
y2data = [0.0, I_Dsat2, I_Dsat2, I_Dsat2, I_Dsat2, I_Dsat2,I_Dsat2,I_Dsat2,I_Dsat2,I_Dsat2,I_Dsat2]

x2data = np.asarray(x2data)
y2data = np.asarray(y2data)
plt.plot(x2data, y2data, color = 'g', label = 'E_G = -6')


plt.legend(bbox_to_anchor =(1.7, 1.15), ncol = 2, labelspacing = 2)
